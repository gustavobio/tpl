{
    "contents" : "#' Get plant taxonomical and distribution data\n#' \n#' This function collects taxonomic information from The Plant List. Synonyms and\n#' misspelled names are resolved automatically.\n#' \n#' @param taxa a character vector containing one or more taxa, without authors \n#'   see \\code{\\link{remove.authors}} if you have a list with authorities\n#' @param replace.synonyms should the function automatically replace synonyms?\n#' @param suggest.names should the function try to suggest corrections for spelling errors?\n#' @return a data frame\n#' @export\n#' @examples \n#' tpl.get(\"Myrcia lingua\")\ntpl.get <-\n  function(taxa, replace.synonyms = TRUE, suggest.names = TRUE)  {\n    \"%in?%\" <- function(x, table) fmatch(x, table, nomatch = 0) > 0\n    taxa <- trim(taxa)\n    taxa <- taxa[nzchar(taxa)]\n    if (length(taxa) == 0L) stop(\"No valid names provided.\")\n    original.search <- taxa\n    res <- data.frame(matrix(vector(), length(taxa), ncol(tpl.accepted[[1]]) + 1, dimnames=list(c(), c(names(tpl.accepted[[1]]), \"note\"))), stringsAsFactors = FALSE)\n    minus.notes <- seq_len(ncol(tpl.accepted[[1]]))\n    index <- 0\n    for (taxon in taxa) {\n      note <- NULL\n      index <- index + 1\n      taxon <- fixCase(taxon)\n      uncertain <- regmatches(taxon, regexpr(\"[a|c]f+\\\\.\", \n                                             taxon))\n      if (length(uncertain) != 0L) \n        taxon <- gsub(\"[a|c]f+\\\\.\", \"\", taxon)\n      #ident <- regmatches(taxon, regexpr(\"\\\\s+sp\\\\.+\\\\w*\", \n      #                                   taxon))\n      #if (length(ident) != 0L) \n      #  taxon <- unlist(strsplit(taxon, \" \"))[1]\n      if (!grepl(\" \", taxon)) {\n        res[index, \"note\"] <- \"not full name\"\n        next\n      }\n      \n      initials <- substr(strsplit(taxon, \" \")[[1]], 1, 1)\n      found <- taxon %in?% tpl.names[[initials[1]]][[initials[2]]]\n      \n      if (!found) {\n        if (suggest.names) {\n          taxon <- suggest.name(taxon)\n        } else {\n          res[index, \"note\"] <- \"not found\"\n          next\n        }\n        if (is.na(taxon)) {\n          res[index, \"note\"] <- \"not found\"\n          next\n        } else {\n          note <- \"was misspelled\"\n        }\n      }\n      \n      genus <- strsplit(taxon, \" \")[[1]][1]\n      #if (genus %in?% names(tpl.accepted)) {\n      accepted <- taxon %in?% tpl.accepted[[genus]]$name\n      #} else {\n      #  accepted <- FALSE\n      #}\n      if (accepted) {\n        taxon.info <- tpl.accepted[[genus]][which(tpl.accepted[[genus]]$name %in?% taxon), ]\n        how.many.accepted <- nrow(taxon.info)\n        if (how.many.accepted == 1L) {\n          res[index, minus.notes] <- taxon.info\n        } else {\n          note <- c(note, \"check +1 accepted\")\n        }\n        res[index, \"note\"] <- paste(note, collapse = \"|\")\n        next\n      }\n      \n      synonym <- taxon %in?% tpl.synonyms[[genus]]$name\n      \n      if (synonym) {\n        taxon.info <- tpl.synonyms[[genus]][which(tpl.synonyms[[genus]]$name %in?% taxon), ]\n        how.many.synonyms <- nrow(taxon.info)\n        if (replace.synonyms) {\n          how.many.accepted <- sum(nzchar(unique(taxon.info$accepted.id)))\n          if (how.many.accepted == 0L) {\n            if (how.many.synonyms == 1L) {\n              note <- c(note, \"no accepted name\")\n              res[index, minus.notes] <- taxon.info\n            }\n            if (how.many.synonyms > 1L) {\n                note <- c(note, \"check no accepted +1 synonyms\")\n            }\n          }\n          if (how.many.accepted == 1L) {\n            accepted.genus <- unique(tpl.accepted.index$genus[fmatch(taxon.info$accepted.id, tpl.accepted.index$id)])\n            if (length(accepted.genus) == 1L) {\n              tpl.accepted.genus <- tpl.accepted[[accepted.genus]]\n            } else {\n              tpl.accepted.genus <- do.call(rbind.data.frame, tpl.accepted[accepted.genus])\n            }\n            accepted.ids <- tpl.accepted.genus$id %in?% taxon.info$accepted.id\n            if (!any(accepted.ids)) {\n              note <- c(note, \"check unresolved accepted\")\n              res[index, \"note\"] <- paste(note, collapse = \"|\")\n              next\n            }\n            taxon.info <- tpl.accepted.genus[which(accepted.ids), ]\n            hits <- nrow(taxon.info)\n            if (hits == 0L) {\n              note <- c(note, \"check unresolved accepted\")\n            }\n            if (hits == 1L) {\n              note <- c(note, \"replaced synonym\")\n              res[index, minus.notes] <- taxon.info\n            }\n            if (hits > 1L) {\n              note <- c(note, \"check +1 accepted\")\n            }\n          }\n          if (how.many.accepted > 1L) {\n            accepted.genus <- tpl.accepted.index$genus[fmatch(unique(taxon.info$id), tpl.accepted.index$id)]\n            tpl.accepted.genus <- do.call(rbind.data.frame, tpl.accepted[accepted.genus])\n            taxon.info <- tpl.accepted.genus[which(tpl.accepted.genus$id %in?% taxon.info$accepted.id), ]\n            really.accepted <- taxon.info$taxonomic.status.in.tpl == \"Accepted\"\n            if (sum(really.accepted) == 0L) {\n              note <- c(note, \"check false accepted\")\n            }\n            if (sum(really.accepted) == 1L) {\n              note <- c(note, \"replaced synonym\")\n              res[index, minus.notes] <- taxon.info[really.accepted, ]\n            }\n            if (sum(really.accepted) > 1L) {\n              note <- c(note, \"check +1 accepted\")\n            }\n          }\n          how.many.synonyms <- nrow(taxon.info)\n        } else {\n          if (how.many.synonyms == 1L) {\n            res[index, minus.notes] <- taxon.info\n          } else {\n            note <- c(note, \"check +1 entries\")\n          }\n        }\n        res[index, \"note\"] <- paste(note, collapse = \"|\")\n        next\n      }      \n      misapplied <- taxon %in?% tpl.misapplied[[genus]]$name\n      \n      if (misapplied) {\n        taxon.info <- tpl.misapplied[[genus]][which(tpl.misapplied[[genus]]$name %in?% taxon), ]\n        if (nrow(taxon.info) == 1L) {\n          res[index, minus.notes] <- taxon.info\n        } else {\n          note <- c(note, \"check +1 entries\")\n        }\n        res[index, \"note\"] <- paste(note, collapse = \"|\")\n        next\n      }\n      \n      unresolved <- taxon %in?% tpl.unresolved[[genus]]$name\n      \n      if (unresolved) {\n        taxon.info <- tpl.unresolved[[genus]][which(tpl.unresolved[[genus]]$name %in?% taxon), ]\n        if (nrow(taxon.info) == 1L) {\n          res[index, minus.notes] <- taxon.info\n        } else {\n          note <- c(note, \"check +1 entries\")\n        }\n        res[index, \"note\"] <- paste(note, collapse = \"|\")\n        next\n      }\n    }\n    data.frame(res, original.search)\n  }\n",
    "created" : 1402058231363.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2950441654",
    "id" : "FA8A7485",
    "lastKnownWriteTime" : 1403841950,
    "path" : "~/Documents/tpl/R/tpl.get.R",
    "project_path" : "R/tpl.get.R",
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "r_source"
}